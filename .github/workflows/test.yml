name: Go Test with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql8:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: testci
        options: >-
          --health-cmd="mysqladmin ping -u root -ptestci"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: bitnami/redis:7.2
        ports:
          - 6379:6379
        env:
          REDIS_PASSWORD: testci
        options: >-
          --health-cmd="redis-cli -h localhost -a testci ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      kafka:
        image: bitnami/kafka:3.6.1
        ports:
          - '9092:9092'
        environment:
          - KAFKA_KRAFT_MODE=true       # 启用 KRaft 模式
          - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
          - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
          - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
          - KAFKA_LISTENER_PORT=9092
          - KAFKA_BROKER_ID=1           # 设置 Broker ID
          - KAFKA_LOG_DIRS=/var/lib/kafka/data
          - KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE=false  # 禁用 Confluent 的指标收集（如果不需要）
          - KAFKA_LOG_RETENTION_HOURS=168  # 设置日志保留时间，单位为小时（默认7天）
          - KAFKA_CREATE_TOPICS=foo:1:1,bar:3:3  # 启动时自动创建主题 foo（1分区）和 bar（3分区）
          - TZ=Asia/Shanghai
        volumes:
          - kafka-data:/var/lib/kafka/data  # 持久化 Kafka 数据
        options: >-
          --health-cmd="nc -zv localhost 9092"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install dependencies
        run: |
          go mod tidy
          go mod download

      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 120 # 等待容器启动 2分钟

      - name: Run tests
        run: |
          go test -v ./...

      - name: Shut down Docker Compose
        run: |
          docker-compose -f docker-compose.yml down
