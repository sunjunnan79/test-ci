name: Go Test with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql8:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: testci
        options: >-
          --health-cmd="mysqladmin ping -u root -ptestci"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: bitnami/redis:7.2
        ports:
          - 6379:6379
        env:
          REDIS_PASSWORD: testci
        options: >-
          --health-cmd="redis-cli -h localhost -a testci ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      zookeeper:
        image: bitnami/zookeeper:3.8.0
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_SERVER_ID: 1
        options: >-
          --health-cmd="echo ruok | nc localhost 2181 | grep imok"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      kafka:
        image: bitnami/kafka:3.6.0
        ports:
          - '9092:9092'
          - '9094:9094'
        options: >-
          --health-cmd="nc -zv kafka 9092"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
          KAFKA_CFG_LISTENER_NAME_EXTERNAL: EXTERNAL
          KAFKA_CFG_LISTENER_PORT_EXTERNAL: 9094
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
          KAFKA_CFG_LISTENER_NAME: PLAINTEXT
          KAFKA_CFG_LISTENER_PORT: 9092
          KAFKA_CFG_BROKER_ID: 0
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
          KAFKA_CFG_CREATE_TOPICS: webook_binlog:3:1
          TZ: Asia/Shanghai

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Install dependencies
        run: |
          go mod tidy
          go mod download

      - name: Start Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 120 # 等待容器启动 2分钟

      - name: Run tests
        run: |
          go test -v ./...

      - name: Shut down Docker Compose
        run: |
          docker-compose -f docker-compose.yml down
